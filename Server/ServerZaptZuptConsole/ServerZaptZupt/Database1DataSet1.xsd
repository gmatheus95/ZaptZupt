<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet1" targetNamespace="http://tempuri.org/Database1DataSet1.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet1.xsd" xmlns="http://tempuri.org/Database1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ServerZaptZupt.Properties.Settings.GlobalReference.Default.Database1ConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="messagesTableAdapter" GeneratorDataComponentClassName="messagesTableAdapter" Name="messages" UserDataComponentName="messagesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString1 (Settings)" DbObjectName="dbo.messages" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[messages] WHERE (([sender] = @Original_sender) AND ([receiver] = @Original_receiver) AND ([msgTimeStamp] = @Original_msgTimeStamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_receiver" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="receiver" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_msgTimeStamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="msgTimeStamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[messages] ([sender], [receiver], [msg]) VALUES (@sender, @receiver, @msg);
SELECT sender, receiver, msgTimeStamp, msg FROM messages WHERE (msgTimeStamp = @msgTimeStamp) AND (receiver = @receiver) AND (sender = @sender)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@receiver" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="receiver" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@msg" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="msg" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="msgTimeStamp" ColumnName="msgTimeStamp" DataSourceName="[D:\DOCUMENTOS\GITHUB\ZAPTZUPT\SERVER\SERVERZAPTZUPTCONSOLE\SERVERZAPTZUPT\BIN\DEBUG\DATABASE1.MDF].dbo.messages" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@msgTimeStamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="msgTimeStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sender, receiver, msgTimeStamp, msg FROM dbo.messages</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[messages] SET [sender] = @sender, [receiver] = @receiver, [msg] = @msg WHERE (([sender] = @Original_sender) AND ([receiver] = @Original_receiver) AND ([msgTimeStamp] = @Original_msgTimeStamp));
SELECT sender, receiver, msgTimeStamp, msg FROM messages WHERE (msgTimeStamp = @msgTimeStamp) AND (receiver = @receiver) AND (sender = @sender)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@receiver" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="receiver" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@msg" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="msg" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_receiver" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="receiver" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_msgTimeStamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="msgTimeStamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="msgTimeStamp" ColumnName="msgTimeStamp" DataSourceName="[D:\DOCUMENTOS\GITHUB\ZAPTZUPT\SERVER\SERVERZAPTZUPTCONSOLE\SERVERZAPTZUPT\BIN\DEBUG\DATABASE1.MDF].dbo.messages" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@msgTimeStamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="msgTimeStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sender" DataSetColumn="sender" />
              <Mapping SourceColumn="receiver" DataSetColumn="receiver" />
              <Mapping SourceColumn="msgTimeStamp" DataSetColumn="msgTimeStamp" />
              <Mapping SourceColumn="msg" DataSetColumn="msg" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString1 (Settings)" DbObjectName="dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([nickname] = @Original_nickname) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([nickname], [password]) VALUES (@nickname, @password);
SELECT nickname, password FROM users WHERE (nickname = @nickname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT nickname, password FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [nickname] = @nickname, [password] = @password WHERE (([nickname] = @Original_nickname) AND ([password] = @Original_password));
SELECT nickname, password FROM users WHERE (nickname = @nickname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="nickname" DataSetColumn="nickname" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet1" msprop:Generator_UserDSName="Database1DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="messages" msprop:Generator_TableClassName="messagesDataTable" msprop:Generator_TableVarName="tablemessages" msprop:Generator_TablePropName="messages" msprop:Generator_RowDeletingName="messagesRowDeleting" msprop:Generator_RowChangingName="messagesRowChanging" msprop:Generator_RowEvHandlerName="messagesRowChangeEventHandler" msprop:Generator_RowDeletedName="messagesRowDeleted" msprop:Generator_UserTableName="messages" msprop:Generator_RowChangedName="messagesRowChanged" msprop:Generator_RowEvArgName="messagesRowChangeEvent" msprop:Generator_RowClassName="messagesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sender" msprop:Generator_ColumnVarNameInTable="columnsender" msprop:Generator_ColumnPropNameInRow="sender" msprop:Generator_ColumnPropNameInTable="senderColumn" msprop:Generator_UserColumnName="sender">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="receiver" msprop:Generator_ColumnVarNameInTable="columnreceiver" msprop:Generator_ColumnPropNameInRow="receiver" msprop:Generator_ColumnPropNameInTable="receiverColumn" msprop:Generator_UserColumnName="receiver">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="msgTimeStamp" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnmsgTimeStamp" msprop:Generator_ColumnPropNameInRow="msgTimeStamp" msprop:Generator_ColumnPropNameInTable="msgTimeStampColumn" msprop:Generator_UserColumnName="msgTimeStamp" type="xs:base64Binary" />
              <xs:element name="msg" msprop:Generator_ColumnVarNameInTable="columnmsg" msprop:Generator_ColumnPropNameInRow="msg" msprop:Generator_ColumnPropNameInTable="msgColumn" msprop:Generator_UserColumnName="msg">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_UserTableName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_RowClassName="usersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="nickname" msprop:Generator_ColumnVarNameInTable="columnnickname" msprop:Generator_ColumnPropNameInRow="nickname" msprop:Generator_ColumnPropNameInTable="nicknameColumn" msprop:Generator_UserColumnName="nickname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:messages" />
      <xs:field xpath="mstns:sender" />
      <xs:field xpath="mstns:receiver" />
      <xs:field xpath="mstns:msgTimeStamp" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:nickname" />
    </xs:unique>
  </xs:element>
</xs:schema>